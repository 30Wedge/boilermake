# DIRS eventually gets built-up to include all sub-directories in the entire
# project hierarchy. It MUST start out empty.
DIRS :=

# LIB_OBJS eventually gets built-up to include all object files that are
# added to library archives. It MUST start out empty.
LIB_OBJS :=

# LIBS eventually gets built-up to include all library files created by the
# project. It MUST start out empty.
LIBS :=

# OBJS eventually gets built-up to include all object files in the entire
# project hierarchy. It MUST start out empty.
OBJS :=

# P_INCLUDES eventually gets built-up to include all dependency files in the
# entire project hierarchy. It MUST start out empty.
P_INCLUDES :=

# Include the main module makefile fragment. This also will recrusively include
# all sub-module makefile fragments.
include module.mk

# Generate the link options for any libraries.
LDLIBS := $(patsubst lib%.a,-l%,$(patsubst ${OUTDIR}%,%,${LIBS}))
ifneq "$(strip ${LDLIBS})" ""
    LIBDIR := ${OUTDIR}
    ifeq "$(strip ${LIBDIR})" ""
        LIBDIR := ./
    endif
    LDFLAGS += $(patsubst %,-L%,${LIBDIR})
endif

# Rule to build the final executable.
${OUT}: ${LIBS} ${OBJS}
	${CXX} -o ${OUT} ${LDFLAGS} ${CXXFLAGS} ${OBJS} ${LDLIBS}

# Pattern rule to build object files from C++ files. This also auto-generates
# dependency files (*.P) as part of the compilation step. The dependency files
# will then be included in the make file (see below) on the next invocation
# of make.
${OUTDIR}%.o: %.cc
	@mkdir -p $(dir $@)
	${CXX} -o $@ -c -MD ${TGT_CXXFLAGS} ${CXXFLAGS} ${TGT_INCDIRS} $<
	@cp ${OUTDIR}$*.d ${OUTDIR}$*.P; \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	    -e '/^$$/ d' -e 's/$$/ :/' < ${OUTDIR}$*.d >> ${OUTDIR}$*.P; \
	rm -f ${OUTDIR}$*.d

# The list of dependency files is generated based on the list of object files.
# Then the dependency files (which were autogenerated during the preceding
# invocation of make) are included. Note that some or all of the dependency
# files might not exist, hence the use of "-" before "include".
-include ${P_INCLUDES}

# Rule to clean everthing.
.PHONY: clean
clean:
	rm -f ${OUT} ${LIBS} ${OBJS} ${LIB_OBJS} ${P_INCLUDES}
